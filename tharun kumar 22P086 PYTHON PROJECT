{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1UdPDtUIyDlijnT6xi6eLqj8bizdOAUcX","timestamp":1678275393686}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# EXPLORATORY DATA ANALYSIS "],"metadata":{"id":"zt0Ej0_NA3_Q"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"eFgP457SBrvu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/train.csv')"],"metadata":{"id":"CpbvBWDiCHFu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"JViLauHKDd1E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678266973139,"user_tz":-330,"elapsed":20,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"0d9e4449-c385-4a3c-cf95-c5676c984a1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 19 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3192 non-null   object \n"," 2   channel_title          3195 non-null   object \n"," 3   subscriber             3175 non-null   float64\n"," 4   title                  3195 non-null   object \n"," 5   tags                   3046 non-null   object \n"," 6   description            3133 non-null   object \n"," 7   Trend_day_count        3197 non-null   float64\n"," 8   Tag_count              3197 non-null   object \n"," 9   Trend_tag_count        3197 non-null   object \n"," 10  comment_count          3198 non-null   object \n"," 11  comment_disabled       3198 non-null   object \n"," 12  like dislike disabled  3198 non-null   object \n"," 13  likes                  3198 non-null   object \n"," 14  dislike                3198 non-null   object \n"," 15  tag appered in title   3197 non-null   object \n"," 16  views                  3198 non-null   object \n"," 17  Unnamed: 17            1 non-null      float64\n"," 18  Unnamed: 18            1 non-null      object \n","dtypes: float64(3), object(16)\n","memory usage: 474.8+ KB\n"]}]},{"cell_type":"markdown","source":["**DELETING THE COLUMNS WITH MORE NUMBER OF NULL VALUES**"],"metadata":{"id":"ZlUJjVQdzyGL"}},{"cell_type":"code","source":["df2 = df.drop(['Unnamed: 17', 'Unnamed: 18'], axis =1)"],"metadata":{"id":"FolpEzoMTqcw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"id":"7pHRYY8aRp_-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678266979806,"user_tz":-330,"elapsed":25,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"f23f7661-dfe3-4a66-c487-fcb5aca52e04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 17 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3192 non-null   object \n"," 2   channel_title          3195 non-null   object \n"," 3   subscriber             3175 non-null   float64\n"," 4   title                  3195 non-null   object \n"," 5   tags                   3046 non-null   object \n"," 6   description            3133 non-null   object \n"," 7   Trend_day_count        3197 non-null   float64\n"," 8   Tag_count              3197 non-null   object \n"," 9   Trend_tag_count        3197 non-null   object \n"," 10  comment_count          3198 non-null   object \n"," 11  comment_disabled       3198 non-null   object \n"," 12  like dislike disabled  3198 non-null   object \n"," 13  likes                  3198 non-null   object \n"," 14  dislike                3198 non-null   object \n"," 15  tag appered in title   3197 non-null   object \n"," 16  views                  3198 non-null   object \n","dtypes: float64(2), object(15)\n","memory usage: 424.9+ KB\n"]}]},{"cell_type":"markdown","source":["**FINDING THE OULIERS IN THE COLUMN**"],"metadata":{"id":"nQuckKu90BPU"}},{"cell_type":"code","source":["sns.boxplot(df2)"],"metadata":{"id":"hZfkGuiUUHzR","colab":{"base_uri":"https://localhost:8080/","height":365},"executionInfo":{"status":"error","timestamp":1678255563168,"user_tz":-330,"elapsed":756,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"6c8cc7de-5e78-4813-98f3-d09ae7c1dae8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-59aaafd152a8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     44\u001b[0m             )\n\u001b[1;32m     45\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 46\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mboxplot\u001b[0;34m(x, y, hue, data, order, hue_order, orient, color, palette, saturation, width, dodge, fliersize, linewidth, whis, ax, **kwargs)\u001b[0m\n\u001b[1;32m   2241\u001b[0m ):\n\u001b[1;32m   2242\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2243\u001b[0;31m     plotter = _BoxPlotter(x, y, hue, data, order, hue_order,\n\u001b[0m\u001b[1;32m   2244\u001b[0m                           \u001b[0morient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2245\u001b[0m                           width, dodge, fliersize, linewidth)\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, x, y, hue, data, order, hue_order, orient, color, palette, saturation, width, dodge, fliersize, linewidth)\u001b[0m\n\u001b[1;32m    404\u001b[0m                  width, dodge, fliersize, linewidth):\n\u001b[1;32m    405\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 406\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mestablish_variables\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhue_order\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    407\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mestablish_colors\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mestablish_variables\u001b[0;34m(self, x, y, hue, data, orient, order, hue_order, units)\u001b[0m\n\u001b[1;32m    154\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m             \u001b[0;31m# Figure out the plotting orientation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 156\u001b[0;31m             orient = infer_orient(\n\u001b[0m\u001b[1;32m    157\u001b[0m                 \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequire_numeric\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequire_numeric\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    158\u001b[0m             )\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36minfer_orient\u001b[0;34m(x, y, orient, require_numeric)\u001b[0m\n\u001b[1;32m   1309\u001b[0m     \"\"\"\n\u001b[1;32m   1310\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1311\u001b[0;31m     \u001b[0mx_type\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mvariable_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1312\u001b[0m     \u001b[0my_type\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0my\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mvariable_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1313\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/seaborn/_core.py\u001b[0m in \u001b[0;36mvariable_type\u001b[0;34m(vector, boolean_type)\u001b[0m\n\u001b[1;32m   1227\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1228\u001b[0m     \u001b[0;31m# Special-case all-na data, which is always \"numeric\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1229\u001b[0;31m     \u001b[0;32mif\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvector\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1230\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m\"numeric\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__nonzero__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1535\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1536\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__nonzero__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1537\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m   1538\u001b[0m             \u001b[0;34mf\"The truth value of a {type(self).__name__} is ambiguous. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1539\u001b[0m             \u001b[0;34m\"Use a.empty, a.bool(), a.item(), a.any() or a.all().\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()."]}]},{"cell_type":"markdown","source":["**STATISTICAL DESCRIPTION OF THE DATA**"],"metadata":{"id":"3h_OrOVk0K-8"}},{"cell_type":"code","source":["df2.describe()"],"metadata":{"id":"N2-dTKK_j5He","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1678266986713,"user_tz":-330,"elapsed":644,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"290b1192-a37f-42c0-da03-41dbc955b550"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         subscriber  Trend_day_count\n","count  3.175000e+03      3197.000000\n","mean   3.823981e+06         7.964342\n","std    2.865771e+07        78.556055\n","min    0.000000e+00         0.000000\n","25%    2.428800e+05         4.000000\n","50%    1.241220e+06         7.000000\n","75%    3.812622e+06        10.000000\n","max    1.576229e+09      4444.000000"],"text/html":["\n","  <div id=\"df-28ee4c3f-53de-431a-a2e7-74f8821a69f3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>subscriber</th>\n","      <th>Trend_day_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.175000e+03</td>\n","      <td>3197.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.823981e+06</td>\n","      <td>7.964342</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.865771e+07</td>\n","      <td>78.556055</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.428800e+05</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.241220e+06</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.812622e+06</td>\n","      <td>10.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.576229e+09</td>\n","      <td>4444.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28ee4c3f-53de-431a-a2e7-74f8821a69f3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-28ee4c3f-53de-431a-a2e7-74f8821a69f3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-28ee4c3f-53de-431a-a2e7-74f8821a69f3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["**FILLING THE ROWS WITH THE NULL VALUES**"],"metadata":{"id":"AKTCS-yL0QEt"}},{"cell_type":"code","source":["df2.fillna(0)"],"metadata":{"id":"bAYBhkUZkYiR","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1678266993054,"user_tz":-330,"elapsed":555,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"a141f411-997e-4dc5-de95-30b11f86ce93"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Video_id category_id          channel_title  subscriber  \\\n","0      HDR9SQc79          22           CaseyNeistat   9086142.0   \n","1     KNH52UF?48          24        LastWeekTonight   5937292.0   \n","2     QTW28IRG36          23           Rudy Mancuso   4191209.0   \n","3     MGL76WI]26          24  Good Mythical Morning  13186408.0   \n","4     TWP93KXT70          24               nigahiga  20563106.0   \n","...          ...         ...                    ...         ...   \n","3193  OKR48DOE67          20         EA SPORTS FIFA   3150213.0   \n","3194  QJK69DS?91          10          JackWhiteVEVO    261596.0   \n","3195  VHF51NVr11          10         JamesBlakeVEVO     28321.0   \n","3196  XHU22OAJ39          26             Refinery29    890739.0   \n","3197  IFD79NSG47          22                MN khan         0.0   \n","\n","                                                  title  \\\n","0                    WE WANT TO TALK ABOUT OUR MARRIAGE   \n","1     The Trump Presidency: Last Week Tonight with J...   \n","2     Racist Superman | Rudy Mancuso, King Bach & Le...   \n","3                      Nickelback Lyrics: Real or Fake?   \n","4                              I Dare You: GOING BALD!?   \n","...                                                 ...   \n","3193      FIFA 18 - FUT Champions Cup Barcelona - Day 1   \n","3194                   Jack White - Corporation (Audio)   \n","3195  James Blake - If The Car Beside You Moves Ahea...   \n","3196  Lucie Fink Trains Like A Professional Gymnast ...   \n","3197  Man drops magnum of Champagne on the floor in ...   \n","\n","                                                   tags  \\\n","0                                       SHANtell martin   \n","1     last week tonight trump presidency|last week t...   \n","2     racist superman|rudy|mancuso|king|bach|racist|...   \n","3     rhett and link|gmm|good mythical morning|rhett...   \n","4     ryan|higa|higatv|nigahiga|i dare you|idy|rhpc|...   \n","...                                                 ...   \n","3193  fifa|fifa ultimate team|fut|fifa pack opening|...   \n","3194  Alternative|Corporation|Jack White|Third Man R...   \n","3195  James|Blake|If|The|Car|Beside|You|Moves|Ahead|...   \n","3196  refinery29|refinery 29|r29|r29 video|refinery2...   \n","3197                                                  0   \n","\n","                                            description  Trend_day_count  \\\n","0     SHANTELL'S CHANNEL - https://www.youtube.com/s...              6.0   \n","1     One year after the presidential election, John...              1.0   \n","2     WATCH MY PREVIOUS VIDEO ▶ \\n\\nSUBSCRIBE ► http...             10.0   \n","3     Today we find out if Link is a Nickelback amat...             12.0   \n","4     I know it's been a while since we did this sho...             11.0   \n","...                                                 ...              ...   \n","3193  Day 1 of the FUT Champions Cup Barcelona featu...              7.0   \n","3194  “Corporation” by Jack White from the forthcomi...              7.0   \n","3195  If the car beside you moves ahead \\nAs much as...             11.0   \n","3196  On this episode of Lucie For Hire, our host Lu...             11.0   \n","3197  Man spills magnum of champagne ‘worth £30,000’...             12.0   \n","\n","     Tag_count Trend_tag_count comment_count comment_disabled  \\\n","0           21               6                          FALSE   \n","1           23               1        116266             TRUE   \n","2           22               3        257850             TRUE   \n","3           17               5        263939             TRUE   \n","4           15               7        268085             TRUE   \n","...        ...             ...           ...              ...   \n","3193        20               5                          FALSE   \n","3194         8               6                          FALSE   \n","3195        15               4                          FALSE   \n","3196        14               6        250750             TRUE   \n","3197        12               4         32337             TRUE   \n","\n","     like dislike disabled  likes dislike tag appered in title    views  \n","0                    FALSE  13342    6089                False  1978978  \n","1                    FALSE   5761    3044                False  1487870  \n","2                     TRUE      0       0                 True  1502102  \n","3                     TRUE      0       0                 True  3519302  \n","4                     TRUE      0       0                 True  4835374  \n","...                    ...    ...     ...                  ...      ...  \n","3193                 FALSE   9734    5912                False   747960  \n","3194                 FALSE  16006   12019                 True   200410  \n","3195                  TRUE      0       0                 True   244022  \n","3196                 FALSE   6859    1247                 True   907340  \n","3197                 FALSE   8339    5436                 True   465531  \n","\n","[3198 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-ee627758-c707-4cbb-a8e9-385e871e2a41\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Video_id</th>\n","      <th>category_id</th>\n","      <th>channel_title</th>\n","      <th>subscriber</th>\n","      <th>title</th>\n","      <th>tags</th>\n","      <th>description</th>\n","      <th>Trend_day_count</th>\n","      <th>Tag_count</th>\n","      <th>Trend_tag_count</th>\n","      <th>comment_count</th>\n","      <th>comment_disabled</th>\n","      <th>like dislike disabled</th>\n","      <th>likes</th>\n","      <th>dislike</th>\n","      <th>tag appered in title</th>\n","      <th>views</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HDR9SQc79</td>\n","      <td>22</td>\n","      <td>CaseyNeistat</td>\n","      <td>9086142.0</td>\n","      <td>WE WANT TO TALK ABOUT OUR MARRIAGE</td>\n","      <td>SHANtell martin</td>\n","      <td>SHANTELL'S CHANNEL - https://www.youtube.com/s...</td>\n","      <td>6.0</td>\n","      <td>21</td>\n","      <td>6</td>\n","      <td></td>\n","      <td>FALSE</td>\n","      <td>FALSE</td>\n","      <td>13342</td>\n","      <td>6089</td>\n","      <td>False</td>\n","      <td>1978978</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>KNH52UF?48</td>\n","      <td>24</td>\n","      <td>LastWeekTonight</td>\n","      <td>5937292.0</td>\n","      <td>The Trump Presidency: Last Week Tonight with J...</td>\n","      <td>last week tonight trump presidency|last week t...</td>\n","      <td>One year after the presidential election, John...</td>\n","      <td>1.0</td>\n","      <td>23</td>\n","      <td>1</td>\n","      <td>116266</td>\n","      <td>TRUE</td>\n","      <td>FALSE</td>\n","      <td>5761</td>\n","      <td>3044</td>\n","      <td>False</td>\n","      <td>1487870</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>QTW28IRG36</td>\n","      <td>23</td>\n","      <td>Rudy Mancuso</td>\n","      <td>4191209.0</td>\n","      <td>Racist Superman | Rudy Mancuso, King Bach &amp; Le...</td>\n","      <td>racist superman|rudy|mancuso|king|bach|racist|...</td>\n","      <td>WATCH MY PREVIOUS VIDEO ▶ \\n\\nSUBSCRIBE ► http...</td>\n","      <td>10.0</td>\n","      <td>22</td>\n","      <td>3</td>\n","      <td>257850</td>\n","      <td>TRUE</td>\n","      <td>TRUE</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>1502102</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MGL76WI]26</td>\n","      <td>24</td>\n","      <td>Good Mythical Morning</td>\n","      <td>13186408.0</td>\n","      <td>Nickelback Lyrics: Real or Fake?</td>\n","      <td>rhett and link|gmm|good mythical morning|rhett...</td>\n","      <td>Today we find out if Link is a Nickelback amat...</td>\n","      <td>12.0</td>\n","      <td>17</td>\n","      <td>5</td>\n","      <td>263939</td>\n","      <td>TRUE</td>\n","      <td>TRUE</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>3519302</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TWP93KXT70</td>\n","      <td>24</td>\n","      <td>nigahiga</td>\n","      <td>20563106.0</td>\n","      <td>I Dare You: GOING BALD!?</td>\n","      <td>ryan|higa|higatv|nigahiga|i dare you|idy|rhpc|...</td>\n","      <td>I know it's been a while since we did this sho...</td>\n","      <td>11.0</td>\n","      <td>15</td>\n","      <td>7</td>\n","      <td>268085</td>\n","      <td>TRUE</td>\n","      <td>TRUE</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>4835374</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3193</th>\n","      <td>OKR48DOE67</td>\n","      <td>20</td>\n","      <td>EA SPORTS FIFA</td>\n","      <td>3150213.0</td>\n","      <td>FIFA 18 - FUT Champions Cup Barcelona - Day 1</td>\n","      <td>fifa|fifa ultimate team|fut|fifa pack opening|...</td>\n","      <td>Day 1 of the FUT Champions Cup Barcelona featu...</td>\n","      <td>7.0</td>\n","      <td>20</td>\n","      <td>5</td>\n","      <td></td>\n","      <td>FALSE</td>\n","      <td>FALSE</td>\n","      <td>9734</td>\n","      <td>5912</td>\n","      <td>False</td>\n","      <td>747960</td>\n","    </tr>\n","    <tr>\n","      <th>3194</th>\n","      <td>QJK69DS?91</td>\n","      <td>10</td>\n","      <td>JackWhiteVEVO</td>\n","      <td>261596.0</td>\n","      <td>Jack White - Corporation (Audio)</td>\n","      <td>Alternative|Corporation|Jack White|Third Man R...</td>\n","      <td>“Corporation” by Jack White from the forthcomi...</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td></td>\n","      <td>FALSE</td>\n","      <td>FALSE</td>\n","      <td>16006</td>\n","      <td>12019</td>\n","      <td>True</td>\n","      <td>200410</td>\n","    </tr>\n","    <tr>\n","      <th>3195</th>\n","      <td>VHF51NVr11</td>\n","      <td>10</td>\n","      <td>JamesBlakeVEVO</td>\n","      <td>28321.0</td>\n","      <td>James Blake - If The Car Beside You Moves Ahea...</td>\n","      <td>James|Blake|If|The|Car|Beside|You|Moves|Ahead|...</td>\n","      <td>If the car beside you moves ahead \\nAs much as...</td>\n","      <td>11.0</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td></td>\n","      <td>FALSE</td>\n","      <td>TRUE</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>244022</td>\n","    </tr>\n","    <tr>\n","      <th>3196</th>\n","      <td>XHU22OAJ39</td>\n","      <td>26</td>\n","      <td>Refinery29</td>\n","      <td>890739.0</td>\n","      <td>Lucie Fink Trains Like A Professional Gymnast ...</td>\n","      <td>refinery29|refinery 29|r29|r29 video|refinery2...</td>\n","      <td>On this episode of Lucie For Hire, our host Lu...</td>\n","      <td>11.0</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>250750</td>\n","      <td>TRUE</td>\n","      <td>FALSE</td>\n","      <td>6859</td>\n","      <td>1247</td>\n","      <td>True</td>\n","      <td>907340</td>\n","    </tr>\n","    <tr>\n","      <th>3197</th>\n","      <td>IFD79NSG47</td>\n","      <td>22</td>\n","      <td>MN khan</td>\n","      <td>0.0</td>\n","      <td>Man drops magnum of Champagne on the floor in ...</td>\n","      <td>0</td>\n","      <td>Man spills magnum of champagne ‘worth £30,000’...</td>\n","      <td>12.0</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>32337</td>\n","      <td>TRUE</td>\n","      <td>FALSE</td>\n","      <td>8339</td>\n","      <td>5436</td>\n","      <td>True</td>\n","      <td>465531</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3198 rows × 17 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee627758-c707-4cbb-a8e9-385e871e2a41')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee627758-c707-4cbb-a8e9-385e871e2a41 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee627758-c707-4cbb-a8e9-385e871e2a41');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df2.info()"],"metadata":{"id":"xILzSPpyki9X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678266999005,"user_tz":-330,"elapsed":855,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"8422ac0a-5d00-4978-a30d-0e6cb934336a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 17 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3192 non-null   object \n"," 2   channel_title          3195 non-null   object \n"," 3   subscriber             3175 non-null   float64\n"," 4   title                  3195 non-null   object \n"," 5   tags                   3046 non-null   object \n"," 6   description            3133 non-null   object \n"," 7   Trend_day_count        3197 non-null   float64\n"," 8   Tag_count              3197 non-null   object \n"," 9   Trend_tag_count        3197 non-null   object \n"," 10  comment_count          3198 non-null   object \n"," 11  comment_disabled       3198 non-null   object \n"," 12  like dislike disabled  3198 non-null   object \n"," 13  likes                  3198 non-null   object \n"," 14  dislike                3198 non-null   object \n"," 15  tag appered in title   3197 non-null   object \n"," 16  views                  3198 non-null   object \n","dtypes: float64(2), object(15)\n","memory usage: 424.9+ KB\n"]}]},{"cell_type":"code","source":["df2 = df2.fillna(0)"],"metadata":{"id":"iHF8WQWMkoNO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"id":"wqyc7XmckumM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678267018147,"user_tz":-330,"elapsed":22,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"01d77d7b-3de4-4ccb-a8cd-83bbd41e1e11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 17 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3198 non-null   object \n"," 2   channel_title          3198 non-null   object \n"," 3   subscriber             3198 non-null   float64\n"," 4   title                  3198 non-null   object \n"," 5   tags                   3198 non-null   object \n"," 6   description            3198 non-null   object \n"," 7   Trend_day_count        3198 non-null   float64\n"," 8   Tag_count              3198 non-null   object \n"," 9   Trend_tag_count        3198 non-null   object \n"," 10  comment_count          3198 non-null   object \n"," 11  comment_disabled       3198 non-null   object \n"," 12  like dislike disabled  3198 non-null   object \n"," 13  likes                  3198 non-null   object \n"," 14  dislike                3198 non-null   object \n"," 15  tag appered in title   3198 non-null   object \n"," 16  views                  3198 non-null   object \n","dtypes: float64(2), object(15)\n","memory usage: 424.9+ KB\n"]}]},{"cell_type":"markdown","source":["**CHANGING DATA TYPES FOR NUMERIC DATA**"],"metadata":{"id":"PQGOzDnk0YTy"}},{"cell_type":"code","source":["df2['Trend_day_count']= df2['Trend_day_count'].astype(float)"],"metadata":{"id":"jwJUCaKfnCW_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2['dislike']= pd.to_numeric(df2['dislike'], errors = 'coerce')\n","df2['comment_count']= pd.to_numeric(df2['comment_count'], errors = 'coerce')\n","df2['Trend_tag_count']= pd.to_numeric(df2['Trend_tag_count'], errors = 'coerce')\n","df2['Tag_count']= pd.to_numeric(df2['Tag_count'], errors = 'coerce')\n","df2['category_id']= pd.to_numeric(df2['category_id'], errors = 'coerce')\n","df2['likes']= pd.to_numeric(df2['likes'], errors = 'coerce')"],"metadata":{"id":"YUspxoYrk4Z9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2 = df2.fillna(0)"],"metadata":{"id":"q7BdPR9xygUy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U825WBSD3wxO","executionInfo":{"status":"ok","timestamp":1678267040049,"user_tz":-330,"elapsed":31,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"7d9e9d88-fc3a-4730-933c-4f46925a34f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 17 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3198 non-null   float64\n"," 2   channel_title          3198 non-null   object \n"," 3   subscriber             3198 non-null   float64\n"," 4   title                  3198 non-null   object \n"," 5   tags                   3198 non-null   object \n"," 6   description            3198 non-null   object \n"," 7   Trend_day_count        3198 non-null   float64\n"," 8   Tag_count              3198 non-null   float64\n"," 9   Trend_tag_count        3198 non-null   float64\n"," 10  comment_count          3198 non-null   float64\n"," 11  comment_disabled       3198 non-null   object \n"," 12  like dislike disabled  3198 non-null   object \n"," 13  likes                  3198 non-null   float64\n"," 14  dislike                3198 non-null   float64\n"," 15  tag appered in title   3198 non-null   object \n"," 16  views                  3198 non-null   object \n","dtypes: float64(8), object(9)\n","memory usage: 424.9+ KB\n"]}]},{"cell_type":"code","source":["df2['like dislike disabled']= df2['like dislike disabled'].astype(bool)\n","df2['comment_disabled']= df2['comment_disabled'].astype(bool)\n","df2['tag appered in title']= df2['tag appered in title'].astype(bool)"],"metadata":{"id":"ORfvs8OT5lyy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m6qzWzPRFWyb","executionInfo":{"status":"ok","timestamp":1678267054754,"user_tz":-330,"elapsed":25,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"2a22ad58-a0f0-461f-d375-bcd83463bea7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3198 entries, 0 to 3197\n","Data columns (total 17 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Video_id               3198 non-null   object \n"," 1   category_id            3198 non-null   float64\n"," 2   channel_title          3198 non-null   object \n"," 3   subscriber             3198 non-null   float64\n"," 4   title                  3198 non-null   object \n"," 5   tags                   3198 non-null   object \n"," 6   description            3198 non-null   object \n"," 7   Trend_day_count        3198 non-null   float64\n"," 8   Tag_count              3198 non-null   float64\n"," 9   Trend_tag_count        3198 non-null   float64\n"," 10  comment_count          3198 non-null   float64\n"," 11  comment_disabled       3198 non-null   bool   \n"," 12  like dislike disabled  3198 non-null   bool   \n"," 13  likes                  3198 non-null   float64\n"," 14  dislike                3198 non-null   float64\n"," 15  tag appered in title   3198 non-null   bool   \n"," 16  views                  3198 non-null   object \n","dtypes: bool(3), float64(8), object(6)\n","memory usage: 359.3+ KB\n"]}]},{"cell_type":"markdown","source":["**FINDING OUTLIERS**"],"metadata":{"id":"e_8X4_za0-JT"}},{"cell_type":"code","source":["sns.boxplot(df2['subscriber'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"qaLf-4_G0hAh","executionInfo":{"status":"ok","timestamp":1678267063633,"user_tz":-330,"elapsed":544,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"11e583e3-857e-4cea-99b5-d5d1447c7005"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='subscriber'>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.distplot(df2['dislike'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"4vUJIRQ22d8G","executionInfo":{"status":"ok","timestamp":1678267069516,"user_tz":-330,"elapsed":731,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"bf377f24-7d65-421c-87eb-268a72c19a4c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='dislike', ylabel='Density'>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.boxplot(df2['likes'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"0KYJK1in29mo","executionInfo":{"status":"ok","timestamp":1678267076547,"user_tz":-330,"elapsed":555,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"bd976fde-cfbc-43b2-f8ae-aed64577e433"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='likes'>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.catplot(x=\"comment_count\",y=\"comment_disabled\",data=df2,kind=\"bar\",height=4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":314},"id":"Plt85nTZ6AaY","executionInfo":{"status":"ok","timestamp":1678267114055,"user_tz":-330,"elapsed":30000,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"bb6355c5-b54c-45a4-b8d4-90cfba3b734d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fc1ef2e6d90>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 288x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.catplot(x=\"Trend_tag_count\",y=\"Tag_count\",data=df2,kind=\"bar\",height=4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":314},"id":"GQa7gzTv8dNj","executionInfo":{"status":"ok","timestamp":1678267226224,"user_tz":-330,"elapsed":1259,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"74c8e6e2-ab78-41f1-a6fc-74ef94f4d526"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fc1eaa42e50>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 288x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.barplot(x= df2['Video_id'].head(), y= df2['Trend_day_count'].head())\n","sns.lineplot(x= df2['Video_id'].head(), y= df2['Trend_day_count'].head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"ZaNsgyTq7Yt-","executionInfo":{"status":"ok","timestamp":1678267313868,"user_tz":-330,"elapsed":574,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"0bee6140-5a69-4177-dc0d-f476c8140e14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='Video_id', ylabel='Trend_day_count'>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.countplot(x ='like dislike disabled', data=df2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"0VrzcVLpNezM","executionInfo":{"status":"ok","timestamp":1678213076039,"user_tz":-330,"elapsed":404,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"89ec70c5-b48a-43b6-9754-dc7a5370adf5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='like dislike disabled', ylabel='count'>"]},"metadata":{},"execution_count":65},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.countplot(x ='comment_disabled', data=df2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"FkyOZbtpSlDx","executionInfo":{"status":"ok","timestamp":1678213515844,"user_tz":-330,"elapsed":409,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"0e4c05a6-61d1-43f2-cba3-cd59d8661d9a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='comment_disabled', ylabel='count'>"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["sns.countplot(x ='tag appered in title', data=df2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"X12ufeD6TGaz","executionInfo":{"status":"ok","timestamp":1678213171671,"user_tz":-330,"elapsed":406,"user":{"displayName":"Dishon.J.Selva","userId":"17752930329514853671"}},"outputId":"c58b153f-7f83-4d6e-c978-b18f5e3df34f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='tag appered in title', ylabel='count'>"]},"metadata":{},"execution_count":67},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"nkbDV78aTsdQ"},"execution_count":null,"outputs":[]}]}